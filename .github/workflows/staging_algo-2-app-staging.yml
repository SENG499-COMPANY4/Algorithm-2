# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - algo-2-app-staging

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python test/test_endpoint.py
          python test/test_errors.py
          python test/test_regression.py

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'algo-2-app-staging'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9568D2961FBB4359AFA6FD7243DF520A }}

      - name: Run integration tests
        run: |
          python test/test_integration.py
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          SCOPE: ${{ secrets.SCOPE }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          BACKEND_USERNAME: ${{ secrets.BACKEND_USERNAME }}
          BACKEND_PASSWORD: ${{ secrets.BACKEND_PASSWORD }}
          BACKEND3_USERNAME: ${{ secrets.BACKEND3_USERNAME }}
          BACKEND3_PASSWORD: ${{ secrets.BACKEND3_PASSWORD }}



